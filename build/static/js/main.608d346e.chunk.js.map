{"version":3,"sources":["serviceWorker.js","Deployement.js","LandingPage/Presentation.js","LandingPage/LandingPage.js","index.js"],"names":["Boolean","window","location","hostname","match","Deployement","textBold","text","Box","fontWeight","DescriptionPresentation","Grid","item","container","xl","lg","md","direction","justify","alignItems","spacing","style","margin","Typography","color","variant","fontSize","Presentation","xs","sm","Paper","paddingTop","backgroundColor","height","width","src","alt","Appbar","AppBar","position","background","boxShadow","marginBottom","marginTop","LandingPage","theme","createMuiTheme","palette","primary","main","secondary","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2PAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCFSC,I,0FCNTC,EAAW,SAACC,GACd,OAAO,kBAACC,EAAA,EAAD,CAAKC,WAAW,kBAClBF,IAIHG,EAA0B,WAE5B,OAAO,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,UAAU,SAASC,QAAQ,SAASC,WAAW,SAASC,QAAS,EAAGC,MAAO,CAACC,OAAQ,IAClI,kBAACX,EAAA,EAAD,CAAMC,MAAI,GACN,kBAACW,EAAA,EAAD,CAAYC,MAAO,UAAWC,QAAQ,MAAMnB,EAHtC,kDAKV,kBAACK,EAAA,EAAD,CAAMC,MAAI,GACN,kBAACW,EAAA,EAAD,CAAYC,MAAO,WACf,kDADJ,mIAKJ,kBAACb,EAAA,EAAD,CAAMC,MAAI,GAAC,kBAACW,EAAA,EAAD,CAAYC,MAAO,WAAYlB,EAAS,oCACnD,kBAACK,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACI,UAAU,MAAMC,QAAQ,eAAeC,WAAW,cACnE,kBAACR,EAAA,EAAD,CAAMC,MAAI,GAAC,kBAAC,IAAD,CAAaS,MAAO,CAAEK,SAAU,KAAOF,MAAO,aACzD,kBAACb,EAAA,EAAD,CAAMC,MAAI,GAAC,kBAAC,IAAD,CAAWS,MAAO,CAAEK,SAAU,KAAOF,MAAO,gBAyBpDG,EAnBM,WAGjB,OAAO,kBAAChB,EAAA,EAAD,CAAMC,MAAI,EAACgB,GAAI,GAAIC,GAAI,GAAIb,GAAI,GAAID,GAAI,GAAID,GAAI,IAClD,kBAACgB,EAAA,EAAD,KACI,kBAACnB,EAAA,EAAD,CAAME,WAAS,EAACI,UAAU,MAAMC,QAAS,eAAgBC,WAAW,SAASE,MAAO,CAACU,WAAY,KAC7F,kBAAC,EAAD,MACA,kBAACpB,EAAA,EAAD,CAAMC,MAAI,EAACG,GAAI,EAAGD,GAAI,EAAGE,GAAI,EAAGK,MAAO,CAACW,gBANtB,KAOd,yBACIC,OAAQ,OACRC,MAAO,MACPC,IAAK,iGACLC,IAAK,mBC7CvBC,EAAS,WACX,OAAO,kBAACC,EAAA,EAAD,CAAQC,SAAS,SACTlB,MAAO,CAACmB,WAAY,cAAeC,UAAW,OAAQC,aAAc,GAAIC,UAAW,KAC9F,kBAAChC,EAAA,EAAD,CAAME,WAAS,GACX,kBAACF,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACK,QAAQ,UACzB,kBAACP,EAAA,EAAD,CAAMC,MAAI,EAACgB,GAAI,GAAIC,GAAI,GAAIb,GAAI,GAAID,GAAI,GAAID,GAAI,IAC3C,kBAACH,EAAA,EAAD,CAAME,WAAS,EAACD,MAAI,GAChB,yBAAKuB,IAAK,aAAcC,IAAI,OAAOF,MAAO,OAAQD,OAAQ,cAmBnEW,EAXK,WAChB,OACI,kBAACjC,EAAA,EAAD,CAAME,WAAS,GACX,kBAAC,EAAD,MACA,kBAACF,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACK,QAAQ,UACzB,kBAAC,EAAD,SCfV2B,EAAQC,YAAe,CACzBC,QAAS,CACLC,QAAS,CACLC,KAAM,WAEVC,UAAW,CACPD,KAAM,cAKZE,EAAM,kBAAC,IAAD,CAAkBN,MAAOA,GACD,kBAAC,EAAD,OAGpCO,IAASC,OAAOF,EAAKG,SAASC,eAAe,SJ2GvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.608d346e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './App.css';\n\nfunction Deployement() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={\"Microb.png\"} alt=\"logo\"/>\n                <h1 style={{color: \"#38b6ff\"}}>\n                    En cours de déploiement ...\n                </h1>\n            </header>\n        </div>\n    );\n}\n\nexport default Deployement;\n","import React from 'react';\nimport {Grid} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AndroidIcon from '@material-ui/icons/Android';\nimport AppleIcon from '@material-ui/icons/Apple';\n\n\n\nconst textBold = (text) => {\n    return <Box fontWeight=\"fontWeightBold\">\n        {text}\n    </Box>\n};\n\nconst DescriptionPresentation = () => {\n    const title = \"Quand être parent devient un jeu d'enfant\";\n    return <Grid item container xl={5} lg={5} md={12} direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={3} style={{margin: 5}}>\n        <Grid item>\n            <Typography color={\"primary\"} variant=\"h2\">{textBold(title)}</Typography>\n        </Grid>\n        <Grid item>\n            <Typography color={\"primary\"}>\n                <b>Le carnet de Mikrob</b> est un carnet de santé connecté à la destination des parents qui\n                souhaient le carnet de leur enfant dans leur poche.\n            </Typography>\n        </Grid>\n        <Grid item><Typography color={\"primary\"}>{textBold(\"Prochainement disponible sur :\")}</Typography></Grid>\n        <Grid item container direction=\"row\" justify=\"space-around\" alignItems=\"flex-start\">\n            <Grid item><AndroidIcon style={{ fontSize: 100 }} color={\"primary\"}/></Grid>\n            <Grid item><AppleIcon style={{ fontSize: 100 }} color={\"primary\"}/></Grid>\n        </Grid>\n    </Grid>;\n};\n\n\nconst Presentation = () => {\n    const debug = false ? \"red\" : \"\"\n\n    return <Grid item xs={11} sm={11} md={11} lg={11} xl={11}>\n        <Paper>\n            <Grid container direction=\"row\" justify={\"space-around\"} alignItems=\"center\" style={{paddingTop: 30}}>\n                <DescriptionPresentation/>\n                <Grid item lg={4} xl={3} md={5} style={{backgroundColor: debug}}>\n                    <img\n                        height={\"auto\"}\n                        width={\"500\"}\n                        src={\"https://static.boutique.orange.fr/media-cms/mediatheque/636x900-fairphone-3---vue-1-156109.png\"}\n                        alt={\"phone-app\"}/>\n                </Grid>\n            </Grid>\n        </Paper>\n    </Grid>;\n};\n\nexport default Presentation;","import {AppBar, Grid} from \"@material-ui/core\";\nimport React from \"react\";\nimport Presentation from \"./Presentation\";\n\nconst Appbar = () => {\n    return <AppBar position=\"static\"\n                   style={{background: 'transparent', boxShadow: 'none', marginBottom: 30, marginTop: 20,}}>\n        <Grid container>\n            <Grid item container justify=\"center\">\n                <Grid item xs={11} sm={11} md={11} lg={11} xl={11}>\n                    <Grid container item>\n                        <img src={\"Microb.png\"} alt=\"logo\" width={\"auto\"} height={\"100\"}/>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    </AppBar>;\n};\n\nconst LandingPage = () => {\n    return (\n        <Grid container>\n            <Appbar/>\n            <Grid item container justify=\"center\">\n                <Presentation/>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default LandingPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Deployement from \"./Deployement\";\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\nimport LandingPage from \"./LandingPage/LandingPage\";\n\nconst deployement = false;\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#5271ff'\n        },\n        secondary: {\n            main: \"#e5f3ff\"\n        }\n    }\n});\n\nconst app = <MuiThemeProvider theme={theme}>\n    {deployement ? <Deployement/> : <LandingPage/>}\n</MuiThemeProvider>;\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}